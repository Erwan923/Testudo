#!/usr/bin/env python3

import logging
import json
from pathlib import Path
from datetime import datetime
from typing import Dict, List

class AttackManager:
    def __init__(self, config: Dict):
        self.config = config
        self.logger = logging.getLogger('Testudo.AttackManager')
        self.cheatsheets_path = Path('cheatsheets')
        self.results = {}
    
    def execute_phase(self, phase: str, target: str) -> Dict:
        """Execute une phase d'attaque spécifique"""
        self.logger.info(f"Exécution de la phase {phase} sur {target}")
        
        try:
            # Chargement des commandes depuis la cheatsheet
            commands = self._load_cheatsheet(phase)
            results = []
            
            # Exécution des commandes
            for cmd in commands:
                try:
                    cmd_result = self._execute_command(cmd.format(target=target))
                    results.append({
                        'command': cmd,
                        'result': cmd_result
                    })
                except Exception as e:
                    self.logger.error(f"Erreur d'exécution de {cmd}: {str(e)}")
                    
            return {
                'phase': phase,
                'timestamp': datetime.now().isoformat(),
                'results': results
            }
            
        except Exception as e:
            self.logger.error(f"Erreur lors de la phase {phase}: {str(e)}")
            raise
    
    def _load_cheatsheet(self, phase: str) -> List:
        """Charge les commandes depuis la cheatsheet"""
        file_path = self.cheatsheets_path / f"{pZase}.md"
        try:
            with open(file_path, 'r') as f:
                content = f.read()
            return self._parse_markdown_commands(content)
        except Exception as e:
            self.logger.error(f"Erreur de lecture de la cheatsheet {phase}: l[tr(e)}")
            return []